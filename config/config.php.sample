<?php

define("COCOTS_URL", "http://localhost:9876");

define("COCOTS_DB_PDO_STRING", 'mysql:dbname=cocots_dev;host=localhost');
define("COCOTS_DB_PREFIX", 'cocots_');
define("COCOTS_DB_USER", 'cocots_dev');
define("COCOTS_DB_PASS", 'cocots');

define("COCOTS_MAIL_FROM", "noreply@example.com");
define("COCOTS_MAIL_SMTP_HOST", "localhost");
define("COCOTS_MAIL_SMTP_PORT", "465");
define("COCOTS_MAIL_SMTP_SECURE", 'ssl'); // false | 'ssl' | 'tls'
define("COCOTS_MAIL_SMTP_AUTH", true);
define("COCOTS_MAIL_SMTP_AUTH_USER", "user@example.com");
define("COCOTS_MAIL_SMTP_AUTH_PASS", "pass");
define("COCOTS_MAIL_SMTP_DEBUG", true);
define("COCOTS_MAIL_ADMINS", array('admin@example.com')); // List of admins mails to notify. If empty, no notification will be send.
define("COCOTS_MAIL_PREFIX", "[CoCOTS] "); // Optionnal prefix to add to mail subjets. false if no prefix.

define("COCOTS_ADMIN_USER", "admin");
define("COCOTS_ADMIN_PASSWORD", "secretpassw0rd");
define("COCOTS_ADMIN_SESSION_NAME", "cocots");

define("COCOTS_ENABLE_DEBUG", true);

define("COCOTS_DEFAULT_LANGUAGE", 'en');

define("COCOTS_CUSTOM_CSS", <<<CSS
/* add some custom css here. For example, customize colors vars */
CSS
);
define("COCOTS_CUSTOM_ADMIN_CSS", ''); // same for admin pages.

// List of reserved account name.
define("COCOTS_RESERVED_NAMES", array('admin'));

// Change this to a file path to a php class implemeting the CocotsPreset class.
// If you provide only the filename, it will be looking in the htdocs/lib/presets/ dir.
define("COCOTS_PRESETS_PATH", 'example.php');
// Change this to the classname to use for presets.
define("COCOTS_PRESETS_CLASS", 'CocotsExamplePresets');

// Example for Spip/Ansible (to use with this repo https://code.globenet.org/gn/sitesetagerises/ansible):
// define("COCOTS_PRESETS_PATH", 'ansible.php');
// define("COCOTS_PRESETS_CLASS", 'CocotsAnsibleSpipPresets');
// define("COCOTS_PRESETS_ANSIBLE_VAR_PATH", '/xxx/host_vars/'); // The path to the folder where files should be created
// define("COCOTS_PRESETS_ANSIBLE_NAME_PREFIX", 'account_'); // optionnal prefix for username, dbname, mysql user name, ...
// define("COCOTS_PRESETS_ANSIBLE_STATE_ENABLED", 'enabled'); // optionnal state value to write in ansible vars
// define("COCOTS_PRESETS_ANSIBLE_STATE_DISABLED", 'disabled'); // optionnal state value to write in ansible vars
// define("COCOTS_PRESETS_ANSIBLE_STATE_DELETED", 'deleted'); // optionnal state value to write in ansible vars
// define("COCOTS_PRESETS_ANSIBLE_SPIP_BRANCH", "3.2"); // optionnal spip branch
// define("COCOTS_PRESETS_ANSIBLE_SPIP_DEPOTS", ["https://plugins.spip.net/depots/principal.xml"]); // optionnal spip depots
// define("COCOTS_PRESETS_ANSIBLE_SPIP_PLUGINS", ["facteur", "nospam"]); // optionnal spip plugins prefix
// define("COCOTS_PRESETS_ANSIBLE_SPIP_USE_COCOTS_SMTP", true); // use same smtp as cocots
// define("COCOTS_PRESETS_ANSIBLE_SPIP_CONFIG", array('forums_publics' => 'non')); // custom spip config

define("COCOTS_HOSTING_DOMAIN", 'example.com');

// The text to display on top of the form, to explain what is this interface.
// Note: it can contain HTML. You have to correctly escape this.
define("COCOTS_HELP_TEXT", "This is an example");

// An optional key/question that users will have to provide/answer.
// Note: it can't be HTML.
define("COCOTS_SECURITY_QUESTION", "What is you favorite color?");
// possible answers (case sensitive);
define("COCOTS_SECURITY_ANSWERS", array("Red", "red", "RED"));

// The «notifyAccountCreated» mail content can be customized.
// Use the «%URL%» placeholder to insert the link.
// define("COCOTS_CUSTOM_ACCOUNT_CREATED_NOTIFICATION", <<<EOF
// Here is some custome message.
// Click here: %URL%?test=1&p=2
// EOF);
